Parameters:
  StateMachineName:
    Description: State Machine name
    Type: String


Resources:
  #Role for StateMachine:
  RoleStateMachine:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaExecute
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
        - arn:aws:iam::aws:policy/AWSLambda_FullAccess
        - arn:aws:iam::aws:policy/AmazonSNSFullAccess
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - Fn::Sub: "states.${AWS::Region}.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        -
          PolicyName: LambdaInvokePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: "lambda:InvokeAsync"
                Resource: "*"

  RoleScheduledEvent:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - Fn::Sub: "events.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        -
          PolicyName: StateMachineExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: "states:StartExecution"
                Resource:
                  - !Ref StateMachine


  #Events/Rule:
  ScheduledEventRule:
    Type: "AWS::Events::Rule"
    Properties:
      State: ENABLED
      ScheduleExpression: rate(1 day)
      Targets:
        - Arn:
            Fn::GetAtt:
              - StateMachine
              - Arn
          Id: !GetAtt StateMachine.Name
          RoleArn: !GetAtt RoleScheduledEvent.Arn

  #StateMachine
  StateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: !Ref StateMachineName
      RoleArn: !GetAtt RoleStateMachine.Arn
      DefinitionS3Location:
        Bucket: a-tech-bucket
        Key: StateMachines/NTA/StateMachineDefinition.json

  #SNSTopic:
  Topic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: "ntaErrors"

  Subscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: alina.a14d@gmail.com
      Protocol: email
      TopicArn: !Ref Topic
