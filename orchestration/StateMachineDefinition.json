{
  "StartAt": "StartDBInstance",
  "States": {
    "StartDBInstance": {
      "Type": "Task",
      "Next": "Glue StartJobRun",
      "Parameters": {
        "DbInstanceIdentifier": "newsdata"
      },
      "Resource": "arn:aws:states:::aws-sdk:rds:startDBInstance"
    },
    "Glue StartJobRun": {
      "Type": "Task",
      "Resource": "arn:aws:states:::glue:startJobRun",
      "Parameters": {
        "JobName": "Hudi_Streaming_Job_NTA"
      },
      "ResultPath": "$.GlueRunResult",
      "Next": "PassParam:GlueRunId"
    },
    "PassParam:GlueRunId": {
      "Type": "Pass",
      "Parameters": {
        "RunId.$": "States.Array($.GlueRunResult.JobRunId)"
      },
      "Next": "Lambda"
    },
    "Lambda": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "Lambda_stack_bbc",
          "States": {
            "Lambda_stack_bbc": {
              "Type": "Task",
              "Parameters": {
                "Source": "bbc"
              },
              "Resource": "arn:aws:lambda:us-east-2:062261762656:function:a-stack",
              "End": true
            }
          }
        },
        {
          "StartAt": "Lambda_stack_dailycaller",
          "States": {
            "Lambda_stack_dailycaller": {
              "Type": "Task",
              "Parameters": {
                "Source": "dailycaller"
              },
              "Resource": "arn:aws:lambda:us-east-2:062261762656:function:a-stack",
              "End": true
            }
          }
        },
        {
          "StartAt": "Lambda_stack_metro",
          "States": {
            "Lambda_stack_metro": {
              "Type": "Task",
              "Parameters": {
                "Source": "metro"
              },
              "Resource": "arn:aws:lambda:us-east-2:062261762656:function:a-stack",
              "End": true
            }
          }
        },
        {
          "StartAt": "Lambda_stack_guardian",
          "States": {
            "Lambda_stack_guardian": {
              "Type": "Task",
              "Parameters": {
                "Source": "guardian"
              },
              "Resource": "arn:aws:lambda:us-east-2:062261762656:function:a-stack",
              "End": true
            }
          }
        },
        {
          "StartAt": "Lambda_stack_dailymail",
          "States": {
            "Lambda_stack_dailymail": {
              "Type": "Task",
              "Parameters": {
                "Source": "dailymail"
              },
              "Resource": "arn:aws:lambda:us-east-2:062261762656:function:a-stack",
              "End": true
            }
          }
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "ResultPath": "$.error",
          "Next": "Notify"
        }
      ],
      "ResultPath": null,
      "Next": "Lambda_Scraper"
    },
    "Lambda_Scraper": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:us-east-2:062261762656:function:a-scraper",
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "ResultPath": "$.error",
          "Next": "Notify"
        }
      ],
      "Retry": [
        {
          "ErrorEquals": [
            "States.Timeout",
            "Lambda.Unknown",
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "ResultPath": null,
      "Next": "Create_Cluster"
    },
    "Notify": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 3,
          "MaxAttempts": 2,
          "BackoffRate": 1.5
        }
      ],
      "Parameters": {
        "TopicArn": "arn:aws:sns:us-east-2:062261762656:ntaErrors",
        "Subject": "[ERROR]: Task Failed",
        "Message.$": "$.error"
      },
      "Next": "TERMINATE"
    },
    "Create_Cluster": {
      "Type": "Task",
      "Resource": "arn:aws:states:::elasticmapreduce:createCluster.sync",
      "Parameters": {
        "Name": "a-nta-emr",
        "StepConcurrencyLevel": 5,
        "VisibleToAllUsers": true,
        "ReleaseLabel": "emr-5.34.0",
        "Applications": [
          {
            "Name": "spark"
          },
          {
            "Name": "hive"
          }
        ],
        "Configurations": [
          {
            "Classification": "spark-env",
            "Properties": {
              "PYSPARK_PYTHON": "/usr/bin/python3"
            }
          },
          {
            "Classification": "spark-defaults",
            "Properties": {
              "spark.driver.maxResultSize": "10g",
              "spark.driver.memory": "10g",
              "spark.executor.memory": "15g"
            }
          }
        ],
        "ServiceRole": "EMR_DefaultRole",
        "JobFlowRole": "EMR_EC2_DefaultRole",
        "LogUri": "s3://a-tech-bucket/NTA/emrLog/",
        "Instances": {
          "Ec2KeyName": "key1",
          "KeepJobFlowAliveWhenNoSteps": true,
          "InstanceFleets": [
            {
              "InstanceFleetType": "MASTER",
              "TargetOnDemandCapacity": 1,
              "InstanceTypeConfigs": [
                {
                  "InstanceType": "m5.xlarge"
                }
              ]
            },
            {
              "InstanceFleetType": "CORE",
              "TargetSpotCapacity": 10,
              "InstanceTypeConfigs": [
                {
                  "InstanceType": "m5.xlarge"
                }
              ]
            },
            {
              "InstanceFleetType": "TASK",
              "TargetSpotCapacity": 30,
              "InstanceTypeConfigs": [
                {
                  "InstanceType": "m5.xlarge"
                }
              ]
            }
          ]
        }
      },
      "ResultPath": "$.CreateClusterResult",
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "ResultPath": "$.error",
          "Next": "Notify"
        }
      ],
      "Next": "PassParam:ClusterId"
    },
    "PassParam:ClusterId": {
      "Type": "Pass",
      "Parameters": {
        "RunId.$": "$.RunId",
        "ClusterId.$": "$.CreateClusterResult.ClusterId"
      },
      "Next": "Submit_PySpark_Job"
    },
    "Submit_PySpark_Job": {
      "Type": "Task",
      "Resource": "arn:aws:states:::elasticmapreduce:addStep.sync",
      "Parameters": {
        "ClusterId.$": "$.ClusterId",
        "Step": {
          "Name": "SparkJob",
          "ActionOnFailure": "CONTINUE",
          "HadoopJarStep": {
            "Jar": "command-runner.jar",
            "Args": [
              "bash",
              "-c",
              "aws s3 cp s3://a-tech-bucket/NTA/app/requirements.txt .; pip3 install -r requirements.txt; spark-submit --jars s3://a-tech-bucket/NTA/app/jars/postgresql-42.4.0.jar --driver-class-path s3://a-tech-bucket/NTA/app/jars/postgresql-42.4.0.jar --conf spark.executor.extraClassPath=s3://a-tech-bucket/NTA/app/jars/postgresql-42.4.0.jar --py-files s3://a-tech-bucket/NTA/app/utilities.zip s3://a-tech-bucket/NTA/app/main.py && cd"
            ]
          }
        }
      },
      "ResultPath": null,
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "ResultPath": "$.error",
          "Next": "Notify"
        }
      ],
      "Retry": [
        {
          "ErrorEquals": [
            "States.Timeout"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "TERMINATE"
    },
    "TERMINATE": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "Terminate_Cluster",
          "States": {
            "Terminate_Cluster": {
              "Type": "Task",
              "Resource": "arn:aws:states:::elasticmapreduce:terminateCluster.sync",
              "Parameters": {
                "ClusterId.$": "$.ClusterId"
              },
              "End": true
            }
          }
        },
        {
          "StartAt": "StopJobRun",
          "States": {
            "StopJobRun": {
              "Type": "Task",
              "Parameters": {
                "JobName": "Hudi_Streaming_Job_NTA",
                "JobRunIds.$": "$.RunId"
              },
              "Resource": "arn:aws:states:::aws-sdk:glue:batchStopJobRun",
              "End": true
            }
          }
        },
        {
          "StartAt": "StopDBInstance",
          "States": {
            "StopDBInstance": {
              "Type": "Task",
              "Parameters": {
                "DbInstanceIdentifier": "newsdata"
              },
              "End": true,
              "Resource": "arn:aws:states:::aws-sdk:rds:stopDBInstance"
            }
          }
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "ResultPath": "$.error",
          "Next": "Notify"
        }
      ],
      "ResultPath": null,
      "End": true
    }
  }
}